<?xml version="1.0" encoding="UTF-8"?>
<!-- MyBatis 매퍼 DTD 를 선언한다 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 매퍼의 네임스페이스를 DAO 인터페이스 FQCN 으로 지정한다 -->
<mapper namespace="com.winter.app.board.FileDAO">

	<!-- upload_file 테이블을 FileVO 로 매핑하는 resultMap 을 정의한다 -->
	<resultMap id="FileMap" type="com.winter.app.board.FileVO">
		<id property="id" column="file_id" />
		<result property="originName" column="origin_name" />
		<result property="savedName" column="save_name" />
		<result property="contentType" column="content_type" />
		<result property="fileSize" column="file_size" />
		<result property="fileExt" column="file_ext" />
		<result property="filePath" column="file_path" />
		<result property="downloadCount" column="download_count" />
		<result property="deleted" column="deleted" />
		<result property="regDate" column="reg_date" />
		<result property="modDate" column="mod_date" />
	</resultMap>

	<!-- 파일 메타데이터를 INSERT 한다 -->
	<insert id="insertFile"
		parameterType="com.winter.app.board.FileVO" useGeneratedKeys="true"
		keyProperty="id" keyColumn="file_id">
		<!-- upload_file 에 필요한 컬럼을 지정한다 -->
		INSERT INTO upload_file
		(origin_name, save_name, content_type, file_size, file_ext, file_path)
		<!-- VO 의 값을 바인딩한다 -->
		VALUES
		(#{originName}, #{savedName}, #{contentType}, #{fileSize}, #{fileExt}, #{filePath})
	</insert>

	<!-- 삭제되지 않은 파일 목록을 조회한다 -->
	<select id="selectFileList" resultMap="FileMap">
		<!-- 삭제 플래그가 0 인 행만 최신순으로 조회한다 -->
		SELECT
		file_id, origin_name, save_name, content_type, file_size,
		file_ext, file_path, download_count, deleted, reg_date, mod_date
		FROM upload_file
		WHERE deleted = 0
		ORDER BY reg_date DESC
	</select>

	<!-- PK 기준 단건을 조회한다 -->
	<select id="selectFile" parameterType="long" resultMap="FileMap">
		<!-- file_id 로 단건을 조회한다 -->
		SELECT
		file_id, origin_name, save_name, content_type, file_size,
		file_ext, file_path, download_count, deleted, reg_date, mod_date
		FROM upload_file
		WHERE file_id = #{id}
	</select>

	<!-- PK 기준 물리 삭제를 수행한다 -->
	<delete id="deleteFile" parameterType="long">
		<!-- file_id 로 행을 삭제한다 -->
		DELETE FROM upload_file
		WHERE file_id = #{id}
	</delete>

	<!-- PK 기준 논리 삭제를 수행한다 -->
	<update id="softDeleteFile" parameterType="long">
		<!-- deleted=1 로 표시하고 수정일을 갱신한다 -->
		UPDATE upload_file
		SET deleted = 1, mod_date = NOW()
		WHERE file_id = #{id}
	</update>

	<!-- PK 기준 다운로드 횟수를 1 증가시킨다(선택 기능) -->
	<update id="increaseDownloadCount" parameterType="long">
		<!-- download_count 를 1 증가시키고 수정일을 갱신한다 -->
		UPDATE upload_file
		SET download_count = download_count + 1, mod_date = NOW()
		WHERE file_id = #{id}
	</update>
</mapper>
